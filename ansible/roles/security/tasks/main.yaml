---

- name: Install Prerequisites
  ansible.builtin.apt:
    name: aptitude
    update_cache: yes
    state: latest
    force_apt_get: yes

- name: Update apt package cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Upgrade apt to the latest packages
  ansible.builtin.apt:
    upgrade: safe

- name: Install required system packages
  ansible.builtin.apt:
    name: "{{ sys_packages }}"
    state: "latest"

- name: Create Server OpenSSL Private Key
  openssl_privatekey:
    path: "/etc/ssl/private/{{server_name}}.key"

- name: Generate an OpenSSL CSR
  openssl_csr:
    path: "/etc/ssl/certs/{{server_name}}.csr"
    privatekey_path: "/etc/ssl/private/{{server_name}}.key"
    common_name: "cybertron"

- name: Generate a self signed OpenSSL certificate
  openssl_certificate:
    path: "/etc/ssl/certs/{{server_name}}.pem"
    privatekey_path: "/etc/ssl/private/{{server_name}}.key"
    csr_path: "/etc/ssl/certs/{{server_name}}.csr"
    provider: selfsigned

- name: Make sure we have a 'prime' group
  group:
    name: prime
    state: present

- name: Allow 'prime' group to have passwordless sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%prime'
    line: '%prime ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'

- name: Create a regular user with sudo priviledges
  user:
    name: "{{create_user}}"
    state: present
    groups: prime
    append: true
    create_home: true
    shell: /bin/bash

- name: Set authorised key for remote user
  authorized_key:
    user: "{{ create_user }}"
    state: present
    key: "{{ copy_local_ssh_key }}"

- name: Disallow password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: "^#?PasswordAuthentication"
    line: "PasswordAuthentication no"
  register: disallow_pw

- name: Disallow root SSH access
  lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: "^#?PermitRootLogin"
    line: "PermitRootLogin no"
  register: disallow_root_ssh

- name: Restart sshd
  service:
    name: sshd
    state: restarted
  when: disallow_pw.changed or disallow_root_ssh.changed
